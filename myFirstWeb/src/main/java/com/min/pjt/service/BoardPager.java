package com.min.pjt.service;

public class BoardPager {
	//페이지당 게시물 수
	public static final int PAGE_SCALE = 10;
	//화면당 페이지 수
	public static final int BLOCK_SCALE = 10;
	
	private int curPage; //현재 페이지
	private int prePage; //이전 페이지
	private int nextPage; //다음 페이지
	private int totalpage; // 전체 페이지 갯수
	private int totalBlock; // 전체 페이지 블록 갯수
	private int curBlock; // 현재 페이지 블록
	private int preBlock; // 이전 페이지 블록
	private int nextBlock; // 다음 페이지 블록
	//WHERE rn BETWEEN #{start} AND #{end}
	private int pageBegin; // #{start};
	private int pageEnd; // #{end}
	//[이전] blockBegin -> 41 42 43 44 45 46 47 48 49 50 [다음]
	private int blockBegin; // 현재 페이지 블록의 시작번호
	//[이전] 41 42 43 44 45 46 47 48 49 50 <- blockEnd [다음]
	private int blockEnd;
	
	//BoardPager(레코드 갯수, 현재 페이지 번호)
	public BoardPager(int count, int curpage) {
		curBlock = 1; // 현재 페이지 블록 번호
		this.curPage = curpage; // 현재 페이지 설정
		setTotalpage(count); //전체 페이지 갯수 계산
		setPageRange();
		setTotalBlock();
		
	}
	
	public void setBlockRange() {
		//현재 페이지가 몇번 째 페이지 블록에 속하는지 계산
		curBlock = (int)Math.ceil((curPage-1) / BLOCK_SCALE)+1;
		//현재 페이지 블록의 시작, 끝 번호 계산
		blockBegin = (curBlock-1)*BLOCK_SCALE+1;
		//페이지 블록의 끝번호
		blockEnd = blockBegin+BLOCK_SCALE-1;
		//마지막 블록이 범위를 초과과하지 않고록 계산
		if(blockEnd > totalpage) blockEnd = totalpage;
		//이전을 눌렀을 때 이동할 페이지 번호
		prePage = (curPage == 1)? 1:(curBlock-1)*BLOCK_SCALE;
		//다음을 눌렀을 때 이동할 페이지 번호
		nextPage = curBlock > totalBlock ? (curBlock * BLOCK_SCALE) : (curBlock * BLOCK_SCALE)+1;
		// 마지막 페이지가 범위를 초과하지 않도록 처리
		if(nextPage >= totalpage) nextPage = totalpage;
	}
	
	public void setPageRange() {
		//WHERE rn BETWEEN #{start} AND #{end}
		//시작번호 = (현재페이지-1)*페이지당 게시물수 +1
		pageBegin = (curPage-1)*PAGE_SCALE+1;
		//끝번호 = 시작번호+페이지당 게시물수 -1
		pageEnd = pageBegin+PAGE_SCALE-1;
		
	}
	
	
	
	
	public int getCurPage() {
		return curPage;
	}
	public void setCurPage(int curPage) {
		this.curPage = curPage;
	}
	public int getPrePage() {
		return prePage;
	}
	public void setPrePage(int prePage) {
		this.prePage = prePage;
	}
	public int getNextPage() {
		return nextPage;
	}
	public void setNextPage(int nextPage) {
		this.nextPage = nextPage;
	}
	public int getTotalpage() {
		return totalpage;
	}
	public void setTotalpage(int count) {
		//Math.ceil(실수) 올림 처리
		this.totalpage = (int)Math.ceil(count*1.0/PAGE_SCALE);
	}
	public int getTotalBlock() {
		return totalBlock;
	}
	// 페이지의 블록의 갯수 계산(총 100페이지라면 10개의 블록)
	public void setTotalBlock() {
		
		//전체 페이지 갯수 / 10
		// 91/10 =>9.1 => 10개
		totalBlock = (int)Math.ceil(totalpage/BLOCK_SCALE);
	}
	public int getCurBlock() {
		return curBlock;
	}
	public void setCurBlock(int curBlock) {
		this.curBlock = curBlock;
	}
	public int getPreBlock() {
		return preBlock;
	}
	public void setPreBlock(int preBlock) {
		this.preBlock = preBlock;
	}
	public int getNextBlock() {
		return nextBlock;
	}
	public void setNextBlock(int nextBlock) {
		this.nextBlock = nextBlock;
	}
	public int getPageBegin() {
		return pageBegin;
	}
	public void setPageBegin(int pageBegin) {
		this.pageBegin = pageBegin;
	}
	public int getPageEnd() {
		return pageEnd;
	}
	public void setPageEnd(int pageEnd) {
		this.pageEnd = pageEnd;
	}
	public int getBlockBegin() {
		return blockBegin;
	}
	public void setBlockBegin(int blockBegin) {
		this.blockBegin = blockBegin;
	}
	public int getBlockEnd() {
		return blockEnd;
	}
	public void setBlockEnd(int blockEnd) {
		this.blockEnd = blockEnd;
	}
	
	
	
	
	

}
